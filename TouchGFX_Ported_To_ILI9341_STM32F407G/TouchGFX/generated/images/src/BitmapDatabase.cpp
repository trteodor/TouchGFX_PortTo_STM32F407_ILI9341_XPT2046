// 4.16.1 0x38b6031b
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_blue_buttons_round_edge_icon_button[]; // BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID = 0, Size: 60x60 pixels
extern const unsigned char image_blue_buttons_round_icon_button_pressed[]; // BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID = 1, Size: 60x60 pixels
extern const unsigned char image_blue_check_buttons_check_mark_active[]; // BITMAP_BLUE_CHECK_BUTTONS_CHECK_MARK_ACTIVE_ID = 2, Size: 44x44 pixels
extern const unsigned char image_blue_check_buttons_check_mark_pressed[]; // BITMAP_BLUE_CHECK_BUTTONS_CHECK_MARK_PRESSED_ID = 3, Size: 44x44 pixels
extern const unsigned char image_blue_clocks_backgrounds_clock_standard_background[]; // BITMAP_BLUE_CLOCKS_BACKGROUNDS_CLOCK_STANDARD_BACKGROUND_ID = 4, Size: 233x243 pixels
extern const unsigned char image_blue_clocks_hands_clock_standard_hour_hand[]; // BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_HOUR_HAND_ID = 5, Size: 15x61 pixels
extern const unsigned char image_blue_clocks_hands_clock_standard_minute_hand[]; // BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_MINUTE_HAND_ID = 6, Size: 15x77 pixels
extern const unsigned char image_blue_clocks_hands_clock_standard_second_hand[]; // BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_SECOND_HAND_ID = 7, Size: 7x86 pixels
extern const unsigned char image_blue_progressindicators_bg_medium_circle_indicator_bg_full[]; // BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_CIRCLE_INDICATOR_BG_FULL_ID = 8, Size: 104x104 pixels
extern const unsigned char image_blue_progressindicators_bg_medium_progress_indicator_bg_round_15_degrees[]; // BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_ROUND_15_DEGREES_ID = 9, Size: 178x62 pixels
extern const unsigned char image_blue_progressindicators_fill_medium_circle_indicator_fill_full[]; // BITMAP_BLUE_PROGRESSINDICATORS_FILL_MEDIUM_CIRCLE_INDICATOR_FILL_FULL_ID = 10, Size: 104x104 pixels
extern const unsigned char image_butterflysmaller[]; // BITMAP_BUTTERFLYSMALLER_ID = 11, Size: 64x64 pixels
extern const unsigned char image_diodes[]; // BITMAP_DIODES_ID = 12, Size: 32x32 pixels
extern const unsigned char image_hor_therm_bg_scale[]; // BITMAP_HOR_THERM_BG_SCALE_ID = 13, Size: 280x77 pixels
extern const unsigned char image_hor_therm_progress[]; // BITMAP_HOR_THERM_PROGRESS_ID = 14, Size: 244x18 pixels
extern const unsigned char image_ledoff_scaled[]; // BITMAP_LEDOFF_SCALED_ID = 15, Size: 64x64 pixels
extern const unsigned char image_ledon_sclaed[]; // BITMAP_LEDON_SCLAED_ID = 16, Size: 64x64 pixels
extern const unsigned char image_menuscaled[]; // BITMAP_MENUSCALED_ID = 17, Size: 64x64 pixels
extern const unsigned char image_menuscaledwhite[]; // BITMAP_MENUSCALEDWHITE_ID = 18, Size: 64x64 pixels
extern const unsigned char image_mp3future[]; // BITMAP_MP3FUTURE_ID = 19, Size: 64x64 pixels
extern const unsigned char image_mp3futurepressed[]; // BITMAP_MP3FUTUREPRESSED_ID = 20, Size: 64x64 pixels
extern const unsigned char image_tempoff[]; // BITMAP_TEMPOFF_ID = 21, Size: 64x64 pixels
extern const unsigned char image_temponn[]; // BITMAP_TEMPONN_ID = 22, Size: 64x64 pixels
extern const unsigned char image_tictactoeoff[]; // BITMAP_TICTACTOEOFF_ID = 23, Size: 64x64 pixels
extern const unsigned char image_tictactoeon[]; // BITMAP_TICTACTOEON_ID = 24, Size: 64x64 pixels
extern const unsigned char image_trashszary[]; // BITMAP_TRASHSZARY_ID = 25, Size: 64x64 pixels
extern const unsigned char image_watchblack[]; // BITMAP_WATCHBLACK_ID = 26, Size: 64x64 pixels
extern const unsigned char image_watchwhite[]; // BITMAP_WATCHWHITE_ID = 27, Size: 64x64 pixels
extern const unsigned char image_whitetrash[]; // BITMAP_WHITETRASH_ID = 28, Size: 64x64 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { image_blue_buttons_round_edge_icon_button, 0, 60, 60, 7, 6, 46, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 46, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_buttons_round_icon_button_pressed, 0, 60, 60, 13, 11, 34, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 36, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_check_buttons_check_mark_active, 0, 44, 44, 3, 3, 38, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 38, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_check_buttons_check_mark_pressed, 0, 44, 44, 3, 3, 38, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 38, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_clocks_backgrounds_clock_standard_background, 0, 233, 243, 43, 42, 147, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 149, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_clocks_hands_clock_standard_hour_hand, 0, 15, 61, 3, 6, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 43, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_clocks_hands_clock_standard_minute_hand, 0, 15, 77, 3, 6, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 59, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_clocks_hands_clock_standard_second_hand, 0, 7, 86, 2, 2, 3, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 81, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_progressindicators_bg_medium_circle_indicator_bg_full, 0, 104, 104, 16, 15, 72, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 74, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_progressindicators_bg_medium_progress_indicator_bg_round_15_degrees, 0, 178, 62, 118, 38, 36, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 11, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_progressindicators_fill_medium_circle_indicator_fill_full, 0, 104, 104, 17, 17, 70, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 70, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_butterflysmaller, 0, 64, 64, 50, 34, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_diodes, 0, 32, 32, 0, 0, 32, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 32, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_hor_therm_bg_scale, 0, 280, 77, 27, 25, 226, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 24, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_hor_therm_progress, 0, 244, 18, 9, 0, 226, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 18, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_ledoff_scaled, 0, 64, 64, 16, 11, 32, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 32, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_ledon_sclaed, 0, 64, 64, 16, 11, 32, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 32, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_menuscaled, 0, 64, 64, 20, 20, 24, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_menuscaledwhite, 0, 64, 64, 20, 20, 24, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_mp3future, 0, 64, 64, 10, 9, 44, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 46, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_mp3futurepressed, 0, 64, 64, 10, 9, 44, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 46, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_tempoff, 0, 64, 64, 21, 6, 13, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 56, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_temponn, 0, 64, 64, 21, 6, 13, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 56, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_tictactoeoff, 0, 64, 64, 11, 27, 42, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 36, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_tictactoeon, 0, 64, 64, 11, 27, 42, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 36, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_trashszary, 0, 64, 64, 8, 9, 48, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_watchblack, 0, 64, 64, 8, 11, 21, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 42, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_watchwhite, 0, 64, 64, 8, 11, 21, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 42, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_whitetrash, 0, 64, 64, 8, 9, 48, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
